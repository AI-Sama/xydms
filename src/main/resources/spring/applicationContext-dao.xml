<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- 加载多个配置文件 -->
    <!--<bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="order" value="1"/>-->
        <!--<property name="ignoreUnresolvablePlaceholders" value="true"/>-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--&lt;!&ndash;读取src目录的db.properties文件&ndash;&gt;-->
                <!--<value>classpath:properties/db.properties</value>-->
                <!--&lt;!&ndash;读取src目录的redis-config.properties文件&ndash;&gt;-->
                <!--<value>classpath:properties/srcPath.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--加载多个配置文件第二种方式-->
    <context:property-placeholder location="classpath:properties/db.properties,classpath:properties/srcPath.properties" />

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--  <property name="maxActive" value="${druid.maxActive}" />
          <property name="minIdle" value="${druid.minIdle}" />-->
    </bean>
    <!-- 让spring管理sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"/>
    </bean>
    <!--//扫描dao层的包(mapper)-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mapper"/><!-- 具体dao层包的位置在哪，视你新建的dao层java包而定 -->
    </bean>
</beans>
